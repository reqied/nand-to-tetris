// Smile.asm
// Входное значение R0: top * 32 + left / 16

// вытащим top и left из R0
// top = R0 / 32
@top
M=0

@R0
D=M
@rfortop        // сохраним R0 в переменную, чтобы не испортить значение
M=D

(LOOP_DIV)
    @32
    D=A      // D = 32
    @rfortop
    D=D-A    // D = R0 - 32
    @END_DIV
    D;JLT     // если D < 0: заканчиваем
    @top
    M=M+1    // Увеличиваем top на 1
    @32
    D=M
    @rfortop
    D=M-D
    M=D    // обновляем R0 для следующей итерации
    @LOOP_DIV
    0;JMP     // зацикливаем1 
(END_DIV)

@left
M=0          // Инициализируем left
@R0
D=M
@rfortopmod       // сохраним R0 в переменную, чтобы не испортить значение
M=D

(LOOP_MOD)
    @32
    D=D-A    // D = R0 - 32
    @END_MOD
    D;JLT     // Если D < 0, заканчиваем(жить)
    @left
    M=M+1    // увеличиваем left на 1 чтобы получить аааааааааааааааааааааааааааааааааааа
    @32
    D=M
    @rfortopmod
    D=M-D
    M=D   // Уменьшаем rfortopmod для следующей итерации
    @LOOP_MOD
    0;JMP     //циклим
(END_MOD)

// Теперь значение left будет в диапазоне от 0 до 31

//ЭТО СКАЗАЛИ УМНЫЕ ЛЮДИ В ГУГЛЕ НЕ БЕЙ
// Преобразование left из пикселей в байты 
@left       // Загружаем left
D=M         // D = left
@rowBytes   // rowBytes будет использован для хранения адреса строки (в байтах)
M=0         // Инициализируем rowBytes
(LOOP_BYTES)
    @16
    D=D-A    // D = left - 16
    @END_BYTES
    D;JLT     // Если D < 0, заканчиваем
    @rowBytes
    M=M+1    // Увеличиваем rowBytes
    @16
    D=M
    @left
    D=M-D
    M=D   // Уменьшаем left для следующей итерации
    @LOOP_BYTES
    0;JMP     // Повторяем процесс
(END_BYTES)

// Теперь значения top и rowBytes определяют стартовый адрес для рисования
//УМНЫЕ ЛЮДИ ЗАКОНЧИЛИ ГОВОРИТЬ 

//  Вычисление стартового адреса 
@16384  //адрес памяти
D=M         // D = 16384
@top
D=D+A       // D += top * 32
@rowBytes
D=D+A       // D += rowBytes (это left в байтах)
@address
M=D         // Сохраняем стартовый адрес в address

// Рисование смайлика :)))))))))))))))))))))))))))))))))))))))

@address
D=M         // D = адрес
@temp
M=D         // Сохраняем temp для последующего использования

// Рисуем глаза
@7224       //  представление глаз 
D=A
@temp
A=M        
M=D         // Записываем строчку глаз
@temp
M=M+1       // Увеличиваем temp для следующей строки

@7224       // Вторая строка глаз
D=A
@temp
A=M
M=D
@temp
M=M+1       // Увеличиваем temp для следующей строки

@7224       // Третья строка глаз
D=A
@temp
A=M
M=D
@temp
M=M+1       // Увеличиваем temp для следующей строки

// Первая пустая строка
@0          // Пустая строка
D=A
@temp
A=M
M=D
@temp
M=M+1       // Увеличиваем temp для следующей строки

// Вторая пустая строка
@0          // Пустая строка
D=A
@temp
A=M
M=D
@temp
M=M+1       // Увеличиваем temp для следующей строки

// Улыбка: первая строка
@24582      // Улыбка 
D=A
@temp
A=M
M=D
@temp
M=M+1       // Увеличиваем temp для следующей строки

// Улыбка: вторая строка
@14364      // Улыбка 
D=A
@temp
A=M
M=D
@temp
M=M+1       // Увеличиваем temp для следующей строки

// Улыбка: третья строка
@4080       // Улыбка 
D=A
@temp
A=M
M=D

// КОНЕЦ наконец блин отпустите
(INFINITE_LOOP)
@INFINITE_LOOP
0;JMP     // Зациклить программу